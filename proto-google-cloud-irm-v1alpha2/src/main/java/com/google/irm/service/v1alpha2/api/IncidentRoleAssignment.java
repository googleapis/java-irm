/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/irm/v1alpha2/incidents.proto

package com.google.irm.service.v1alpha2.api;

/**
 *
 *
 * <pre>
 * Stores the assignee of a role as well as the proposed next assignee.
 * </pre>
 *
 * Protobuf type {@code google.cloud.irm.v1alpha2.IncidentRoleAssignment}
 */
public final class IncidentRoleAssignment extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.irm.v1alpha2.IncidentRoleAssignment)
    IncidentRoleAssignmentOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use IncidentRoleAssignment.newBuilder() to construct.
  private IncidentRoleAssignment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private IncidentRoleAssignment() {
    name_ = "";
    etag_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new IncidentRoleAssignment();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private IncidentRoleAssignment(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10:
            {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
          case 18:
            {
              java.lang.String s = input.readStringRequireUtf8();

              etag_ = s;
              break;
            }
          case 26:
            {
              com.google.irm.service.v1alpha2.api.IncidentRole.Builder subBuilder = null;
              if (role_ != null) {
                subBuilder = role_.toBuilder();
              }
              role_ =
                  input.readMessage(
                      com.google.irm.service.v1alpha2.api.IncidentRole.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(role_);
                role_ = subBuilder.buildPartial();
              }

              break;
            }
          case 34:
            {
              com.google.irm.service.v1alpha2.api.User.Builder subBuilder = null;
              if (assignee_ != null) {
                subBuilder = assignee_.toBuilder();
              }
              assignee_ =
                  input.readMessage(
                      com.google.irm.service.v1alpha2.api.User.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(assignee_);
                assignee_ = subBuilder.buildPartial();
              }

              break;
            }
          case 42:
            {
              com.google.irm.service.v1alpha2.api.User.Builder subBuilder = null;
              if (proposedAssignee_ != null) {
                subBuilder = proposedAssignee_.toBuilder();
              }
              proposedAssignee_ =
                  input.readMessage(
                      com.google.irm.service.v1alpha2.api.User.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(proposedAssignee_);
                proposedAssignee_ = subBuilder.buildPartial();
              }

              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.irm.service.v1alpha2.api.Incidents
        .internal_static_google_cloud_irm_v1alpha2_IncidentRoleAssignment_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.irm.service.v1alpha2.api.Incidents
        .internal_static_google_cloud_irm_v1alpha2_IncidentRoleAssignment_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.irm.service.v1alpha2.api.IncidentRoleAssignment.class,
            com.google.irm.service.v1alpha2.api.IncidentRoleAssignment.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   *
   *
   * <pre>
   * Output only. Resource name such as
   * "projects/{project_id}/incidents/{incident_id}/role_assignments/{role_id}".
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The name.
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Output only. Resource name such as
   * "projects/{project_id}/incidents/{incident_id}/role_assignments/{role_id}".
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The bytes for name.
   */
  public com.google.protobuf.ByteString getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ETAG_FIELD_NUMBER = 2;
  private volatile java.lang.Object etag_;
  /**
   *
   *
   * <pre>
   * Output only. Etag for this version of the resource. Must be specified in
   * update requests and match the current version in storage. Must not be
   * modified by the client.
   * </pre>
   *
   * <code>string etag = 2;</code>
   *
   * @return The etag.
   */
  public java.lang.String getEtag() {
    java.lang.Object ref = etag_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      etag_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Output only. Etag for this version of the resource. Must be specified in
   * update requests and match the current version in storage. Must not be
   * modified by the client.
   * </pre>
   *
   * <code>string etag = 2;</code>
   *
   * @return The bytes for etag.
   */
  public com.google.protobuf.ByteString getEtagBytes() {
    java.lang.Object ref = etag_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      etag_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ROLE_FIELD_NUMBER = 3;
  private com.google.irm.service.v1alpha2.api.IncidentRole role_;
  /**
   *
   *
   * <pre>
   * The role that is or will be assigned.
   * </pre>
   *
   * <code>.google.cloud.irm.v1alpha2.IncidentRole role = 3;</code>
   *
   * @return Whether the role field is set.
   */
  public boolean hasRole() {
    return role_ != null;
  }
  /**
   *
   *
   * <pre>
   * The role that is or will be assigned.
   * </pre>
   *
   * <code>.google.cloud.irm.v1alpha2.IncidentRole role = 3;</code>
   *
   * @return The role.
   */
  public com.google.irm.service.v1alpha2.api.IncidentRole getRole() {
    return role_ == null
        ? com.google.irm.service.v1alpha2.api.IncidentRole.getDefaultInstance()
        : role_;
  }
  /**
   *
   *
   * <pre>
   * The role that is or will be assigned.
   * </pre>
   *
   * <code>.google.cloud.irm.v1alpha2.IncidentRole role = 3;</code>
   */
  public com.google.irm.service.v1alpha2.api.IncidentRoleOrBuilder getRoleOrBuilder() {
    return getRole();
  }

  public static final int ASSIGNEE_FIELD_NUMBER = 4;
  private com.google.irm.service.v1alpha2.api.User assignee_;
  /**
   *
   *
   * <pre>
   * The user this role is assigned to. This field can only be directly set
   * during creation request. Subsequent updates are done via the
   * IncidentRoleHandover methods.
   * </pre>
   *
   * <code>.google.cloud.irm.v1alpha2.User assignee = 4;</code>
   *
   * @return Whether the assignee field is set.
   */
  public boolean hasAssignee() {
    return assignee_ != null;
  }
  /**
   *
   *
   * <pre>
   * The user this role is assigned to. This field can only be directly set
   * during creation request. Subsequent updates are done via the
   * IncidentRoleHandover methods.
   * </pre>
   *
   * <code>.google.cloud.irm.v1alpha2.User assignee = 4;</code>
   *
   * @return The assignee.
   */
  public com.google.irm.service.v1alpha2.api.User getAssignee() {
    return assignee_ == null
        ? com.google.irm.service.v1alpha2.api.User.getDefaultInstance()
        : assignee_;
  }
  /**
   *
   *
   * <pre>
   * The user this role is assigned to. This field can only be directly set
   * during creation request. Subsequent updates are done via the
   * IncidentRoleHandover methods.
   * </pre>
   *
   * <code>.google.cloud.irm.v1alpha2.User assignee = 4;</code>
   */
  public com.google.irm.service.v1alpha2.api.UserOrBuilder getAssigneeOrBuilder() {
    return getAssignee();
  }

  public static final int PROPOSED_ASSIGNEE_FIELD_NUMBER = 5;
  private com.google.irm.service.v1alpha2.api.User proposedAssignee_;
  /**
   *
   *
   * <pre>
   * The recipient of a requested role handoff. This field can only be directly
   * set during creation request. Subsequent updates are done via the
   * IncidentRoleHandover methods.
   * `assignee` is always the current role-holder, and `proposed_assignee` is
   * used to track unfinished assignments and handoffs. Let's say Bob assigns
   * Alice to a role. Then the fields are:
   *   `assignee`: nil, `proposed_assignee`: Alice
   * If Alice accepts, then the fields are:
   *   `assignee`: Alice, `proposed_assignee`: nil
   * If she cancels, then the RoleAssignment is deleted.
   * Let's say Alice has the role. Then the fields are:
   *   `assignee`: Alice, `proposed_assignee`: nil
   * If Alice becomes incapacitated and Bob requests Carol to take over, then
   * the fields are:
   *   `assignee`: Alice, `proposed_assignee`: Carol
   * After Carol accepts the handover, the fields are:
   *   `assignee`: Carol, `proposed_assignee`: nil
   * Or if Carol refuses the handover, the fields are:
   *   `assignee`: Alice, `proposed_assignee`: nil
   * </pre>
   *
   * <code>.google.cloud.irm.v1alpha2.User proposed_assignee = 5;</code>
   *
   * @return Whether the proposedAssignee field is set.
   */
  public boolean hasProposedAssignee() {
    return proposedAssignee_ != null;
  }
  /**
   *
   *
   * <pre>
   * The recipient of a requested role handoff. This field can only be directly
   * set during creation request. Subsequent updates are done via the
   * IncidentRoleHandover methods.
   * `assignee` is always the current role-holder, and `proposed_assignee` is
   * used to track unfinished assignments and handoffs. Let's say Bob assigns
   * Alice to a role. Then the fields are:
   *   `assignee`: nil, `proposed_assignee`: Alice
   * If Alice accepts, then the fields are:
   *   `assignee`: Alice, `proposed_assignee`: nil
   * If she cancels, then the RoleAssignment is deleted.
   * Let's say Alice has the role. Then the fields are:
   *   `assignee`: Alice, `proposed_assignee`: nil
   * If Alice becomes incapacitated and Bob requests Carol to take over, then
   * the fields are:
   *   `assignee`: Alice, `proposed_assignee`: Carol
   * After Carol accepts the handover, the fields are:
   *   `assignee`: Carol, `proposed_assignee`: nil
   * Or if Carol refuses the handover, the fields are:
   *   `assignee`: Alice, `proposed_assignee`: nil
   * </pre>
   *
   * <code>.google.cloud.irm.v1alpha2.User proposed_assignee = 5;</code>
   *
   * @return The proposedAssignee.
   */
  public com.google.irm.service.v1alpha2.api.User getProposedAssignee() {
    return proposedAssignee_ == null
        ? com.google.irm.service.v1alpha2.api.User.getDefaultInstance()
        : proposedAssignee_;
  }
  /**
   *
   *
   * <pre>
   * The recipient of a requested role handoff. This field can only be directly
   * set during creation request. Subsequent updates are done via the
   * IncidentRoleHandover methods.
   * `assignee` is always the current role-holder, and `proposed_assignee` is
   * used to track unfinished assignments and handoffs. Let's say Bob assigns
   * Alice to a role. Then the fields are:
   *   `assignee`: nil, `proposed_assignee`: Alice
   * If Alice accepts, then the fields are:
   *   `assignee`: Alice, `proposed_assignee`: nil
   * If she cancels, then the RoleAssignment is deleted.
   * Let's say Alice has the role. Then the fields are:
   *   `assignee`: Alice, `proposed_assignee`: nil
   * If Alice becomes incapacitated and Bob requests Carol to take over, then
   * the fields are:
   *   `assignee`: Alice, `proposed_assignee`: Carol
   * After Carol accepts the handover, the fields are:
   *   `assignee`: Carol, `proposed_assignee`: nil
   * Or if Carol refuses the handover, the fields are:
   *   `assignee`: Alice, `proposed_assignee`: nil
   * </pre>
   *
   * <code>.google.cloud.irm.v1alpha2.User proposed_assignee = 5;</code>
   */
  public com.google.irm.service.v1alpha2.api.UserOrBuilder getProposedAssigneeOrBuilder() {
    return getProposedAssignee();
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (!getEtagBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, etag_);
    }
    if (role_ != null) {
      output.writeMessage(3, getRole());
    }
    if (assignee_ != null) {
      output.writeMessage(4, getAssignee());
    }
    if (proposedAssignee_ != null) {
      output.writeMessage(5, getProposedAssignee());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (!getEtagBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, etag_);
    }
    if (role_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getRole());
    }
    if (assignee_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, getAssignee());
    }
    if (proposedAssignee_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, getProposedAssignee());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.irm.service.v1alpha2.api.IncidentRoleAssignment)) {
      return super.equals(obj);
    }
    com.google.irm.service.v1alpha2.api.IncidentRoleAssignment other =
        (com.google.irm.service.v1alpha2.api.IncidentRoleAssignment) obj;

    if (!getName().equals(other.getName())) return false;
    if (!getEtag().equals(other.getEtag())) return false;
    if (hasRole() != other.hasRole()) return false;
    if (hasRole()) {
      if (!getRole().equals(other.getRole())) return false;
    }
    if (hasAssignee() != other.hasAssignee()) return false;
    if (hasAssignee()) {
      if (!getAssignee().equals(other.getAssignee())) return false;
    }
    if (hasProposedAssignee() != other.hasProposedAssignee()) return false;
    if (hasProposedAssignee()) {
      if (!getProposedAssignee().equals(other.getProposedAssignee())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + ETAG_FIELD_NUMBER;
    hash = (53 * hash) + getEtag().hashCode();
    if (hasRole()) {
      hash = (37 * hash) + ROLE_FIELD_NUMBER;
      hash = (53 * hash) + getRole().hashCode();
    }
    if (hasAssignee()) {
      hash = (37 * hash) + ASSIGNEE_FIELD_NUMBER;
      hash = (53 * hash) + getAssignee().hashCode();
    }
    if (hasProposedAssignee()) {
      hash = (37 * hash) + PROPOSED_ASSIGNEE_FIELD_NUMBER;
      hash = (53 * hash) + getProposedAssignee().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.irm.service.v1alpha2.api.IncidentRoleAssignment parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.irm.service.v1alpha2.api.IncidentRoleAssignment parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.irm.service.v1alpha2.api.IncidentRoleAssignment parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.irm.service.v1alpha2.api.IncidentRoleAssignment parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.irm.service.v1alpha2.api.IncidentRoleAssignment parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.irm.service.v1alpha2.api.IncidentRoleAssignment parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.irm.service.v1alpha2.api.IncidentRoleAssignment parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.irm.service.v1alpha2.api.IncidentRoleAssignment parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.irm.service.v1alpha2.api.IncidentRoleAssignment parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.irm.service.v1alpha2.api.IncidentRoleAssignment parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.irm.service.v1alpha2.api.IncidentRoleAssignment parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.irm.service.v1alpha2.api.IncidentRoleAssignment parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.irm.service.v1alpha2.api.IncidentRoleAssignment prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Stores the assignee of a role as well as the proposed next assignee.
   * </pre>
   *
   * Protobuf type {@code google.cloud.irm.v1alpha2.IncidentRoleAssignment}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.irm.v1alpha2.IncidentRoleAssignment)
      com.google.irm.service.v1alpha2.api.IncidentRoleAssignmentOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.irm.service.v1alpha2.api.Incidents
          .internal_static_google_cloud_irm_v1alpha2_IncidentRoleAssignment_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.irm.service.v1alpha2.api.Incidents
          .internal_static_google_cloud_irm_v1alpha2_IncidentRoleAssignment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.irm.service.v1alpha2.api.IncidentRoleAssignment.class,
              com.google.irm.service.v1alpha2.api.IncidentRoleAssignment.Builder.class);
    }

    // Construct using com.google.irm.service.v1alpha2.api.IncidentRoleAssignment.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      etag_ = "";

      if (roleBuilder_ == null) {
        role_ = null;
      } else {
        role_ = null;
        roleBuilder_ = null;
      }
      if (assigneeBuilder_ == null) {
        assignee_ = null;
      } else {
        assignee_ = null;
        assigneeBuilder_ = null;
      }
      if (proposedAssigneeBuilder_ == null) {
        proposedAssignee_ = null;
      } else {
        proposedAssignee_ = null;
        proposedAssigneeBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.irm.service.v1alpha2.api.Incidents
          .internal_static_google_cloud_irm_v1alpha2_IncidentRoleAssignment_descriptor;
    }

    @java.lang.Override
    public com.google.irm.service.v1alpha2.api.IncidentRoleAssignment getDefaultInstanceForType() {
      return com.google.irm.service.v1alpha2.api.IncidentRoleAssignment.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.irm.service.v1alpha2.api.IncidentRoleAssignment build() {
      com.google.irm.service.v1alpha2.api.IncidentRoleAssignment result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.irm.service.v1alpha2.api.IncidentRoleAssignment buildPartial() {
      com.google.irm.service.v1alpha2.api.IncidentRoleAssignment result =
          new com.google.irm.service.v1alpha2.api.IncidentRoleAssignment(this);
      result.name_ = name_;
      result.etag_ = etag_;
      if (roleBuilder_ == null) {
        result.role_ = role_;
      } else {
        result.role_ = roleBuilder_.build();
      }
      if (assigneeBuilder_ == null) {
        result.assignee_ = assignee_;
      } else {
        result.assignee_ = assigneeBuilder_.build();
      }
      if (proposedAssigneeBuilder_ == null) {
        result.proposedAssignee_ = proposedAssignee_;
      } else {
        result.proposedAssignee_ = proposedAssigneeBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.irm.service.v1alpha2.api.IncidentRoleAssignment) {
        return mergeFrom((com.google.irm.service.v1alpha2.api.IncidentRoleAssignment) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.irm.service.v1alpha2.api.IncidentRoleAssignment other) {
      if (other == com.google.irm.service.v1alpha2.api.IncidentRoleAssignment.getDefaultInstance())
        return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (!other.getEtag().isEmpty()) {
        etag_ = other.etag_;
        onChanged();
      }
      if (other.hasRole()) {
        mergeRole(other.getRole());
      }
      if (other.hasAssignee()) {
        mergeAssignee(other.getAssignee());
      }
      if (other.hasProposedAssignee()) {
        mergeProposedAssignee(other.getProposedAssignee());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.irm.service.v1alpha2.api.IncidentRoleAssignment parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage =
            (com.google.irm.service.v1alpha2.api.IncidentRoleAssignment) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     *
     *
     * <pre>
     * Output only. Resource name such as
     * "projects/{project_id}/incidents/{incident_id}/role_assignments/{role_id}".
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Resource name such as
     * "projects/{project_id}/incidents/{incident_id}/role_assignments/{role_id}".
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Resource name such as
     * "projects/{project_id}/incidents/{incident_id}/role_assignments/{role_id}".
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      name_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Resource name such as
     * "projects/{project_id}/incidents/{incident_id}/role_assignments/{role_id}".
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {

      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Resource name such as
     * "projects/{project_id}/incidents/{incident_id}/role_assignments/{role_id}".
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      name_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object etag_ = "";
    /**
     *
     *
     * <pre>
     * Output only. Etag for this version of the resource. Must be specified in
     * update requests and match the current version in storage. Must not be
     * modified by the client.
     * </pre>
     *
     * <code>string etag = 2;</code>
     *
     * @return The etag.
     */
    public java.lang.String getEtag() {
      java.lang.Object ref = etag_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        etag_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Etag for this version of the resource. Must be specified in
     * update requests and match the current version in storage. Must not be
     * modified by the client.
     * </pre>
     *
     * <code>string etag = 2;</code>
     *
     * @return The bytes for etag.
     */
    public com.google.protobuf.ByteString getEtagBytes() {
      java.lang.Object ref = etag_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        etag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Etag for this version of the resource. Must be specified in
     * update requests and match the current version in storage. Must not be
     * modified by the client.
     * </pre>
     *
     * <code>string etag = 2;</code>
     *
     * @param value The etag to set.
     * @return This builder for chaining.
     */
    public Builder setEtag(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      etag_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Etag for this version of the resource. Must be specified in
     * update requests and match the current version in storage. Must not be
     * modified by the client.
     * </pre>
     *
     * <code>string etag = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearEtag() {

      etag_ = getDefaultInstance().getEtag();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Etag for this version of the resource. Must be specified in
     * update requests and match the current version in storage. Must not be
     * modified by the client.
     * </pre>
     *
     * <code>string etag = 2;</code>
     *
     * @param value The bytes for etag to set.
     * @return This builder for chaining.
     */
    public Builder setEtagBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      etag_ = value;
      onChanged();
      return this;
    }

    private com.google.irm.service.v1alpha2.api.IncidentRole role_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.irm.service.v1alpha2.api.IncidentRole,
            com.google.irm.service.v1alpha2.api.IncidentRole.Builder,
            com.google.irm.service.v1alpha2.api.IncidentRoleOrBuilder>
        roleBuilder_;
    /**
     *
     *
     * <pre>
     * The role that is or will be assigned.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.IncidentRole role = 3;</code>
     *
     * @return Whether the role field is set.
     */
    public boolean hasRole() {
      return roleBuilder_ != null || role_ != null;
    }
    /**
     *
     *
     * <pre>
     * The role that is or will be assigned.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.IncidentRole role = 3;</code>
     *
     * @return The role.
     */
    public com.google.irm.service.v1alpha2.api.IncidentRole getRole() {
      if (roleBuilder_ == null) {
        return role_ == null
            ? com.google.irm.service.v1alpha2.api.IncidentRole.getDefaultInstance()
            : role_;
      } else {
        return roleBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The role that is or will be assigned.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.IncidentRole role = 3;</code>
     */
    public Builder setRole(com.google.irm.service.v1alpha2.api.IncidentRole value) {
      if (roleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        role_ = value;
        onChanged();
      } else {
        roleBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The role that is or will be assigned.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.IncidentRole role = 3;</code>
     */
    public Builder setRole(
        com.google.irm.service.v1alpha2.api.IncidentRole.Builder builderForValue) {
      if (roleBuilder_ == null) {
        role_ = builderForValue.build();
        onChanged();
      } else {
        roleBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The role that is or will be assigned.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.IncidentRole role = 3;</code>
     */
    public Builder mergeRole(com.google.irm.service.v1alpha2.api.IncidentRole value) {
      if (roleBuilder_ == null) {
        if (role_ != null) {
          role_ =
              com.google.irm.service.v1alpha2.api.IncidentRole.newBuilder(role_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          role_ = value;
        }
        onChanged();
      } else {
        roleBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The role that is or will be assigned.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.IncidentRole role = 3;</code>
     */
    public Builder clearRole() {
      if (roleBuilder_ == null) {
        role_ = null;
        onChanged();
      } else {
        role_ = null;
        roleBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The role that is or will be assigned.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.IncidentRole role = 3;</code>
     */
    public com.google.irm.service.v1alpha2.api.IncidentRole.Builder getRoleBuilder() {

      onChanged();
      return getRoleFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The role that is or will be assigned.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.IncidentRole role = 3;</code>
     */
    public com.google.irm.service.v1alpha2.api.IncidentRoleOrBuilder getRoleOrBuilder() {
      if (roleBuilder_ != null) {
        return roleBuilder_.getMessageOrBuilder();
      } else {
        return role_ == null
            ? com.google.irm.service.v1alpha2.api.IncidentRole.getDefaultInstance()
            : role_;
      }
    }
    /**
     *
     *
     * <pre>
     * The role that is or will be assigned.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.IncidentRole role = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.irm.service.v1alpha2.api.IncidentRole,
            com.google.irm.service.v1alpha2.api.IncidentRole.Builder,
            com.google.irm.service.v1alpha2.api.IncidentRoleOrBuilder>
        getRoleFieldBuilder() {
      if (roleBuilder_ == null) {
        roleBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.irm.service.v1alpha2.api.IncidentRole,
                com.google.irm.service.v1alpha2.api.IncidentRole.Builder,
                com.google.irm.service.v1alpha2.api.IncidentRoleOrBuilder>(
                getRole(), getParentForChildren(), isClean());
        role_ = null;
      }
      return roleBuilder_;
    }

    private com.google.irm.service.v1alpha2.api.User assignee_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.irm.service.v1alpha2.api.User,
            com.google.irm.service.v1alpha2.api.User.Builder,
            com.google.irm.service.v1alpha2.api.UserOrBuilder>
        assigneeBuilder_;
    /**
     *
     *
     * <pre>
     * The user this role is assigned to. This field can only be directly set
     * during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User assignee = 4;</code>
     *
     * @return Whether the assignee field is set.
     */
    public boolean hasAssignee() {
      return assigneeBuilder_ != null || assignee_ != null;
    }
    /**
     *
     *
     * <pre>
     * The user this role is assigned to. This field can only be directly set
     * during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User assignee = 4;</code>
     *
     * @return The assignee.
     */
    public com.google.irm.service.v1alpha2.api.User getAssignee() {
      if (assigneeBuilder_ == null) {
        return assignee_ == null
            ? com.google.irm.service.v1alpha2.api.User.getDefaultInstance()
            : assignee_;
      } else {
        return assigneeBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The user this role is assigned to. This field can only be directly set
     * during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User assignee = 4;</code>
     */
    public Builder setAssignee(com.google.irm.service.v1alpha2.api.User value) {
      if (assigneeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        assignee_ = value;
        onChanged();
      } else {
        assigneeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The user this role is assigned to. This field can only be directly set
     * during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User assignee = 4;</code>
     */
    public Builder setAssignee(com.google.irm.service.v1alpha2.api.User.Builder builderForValue) {
      if (assigneeBuilder_ == null) {
        assignee_ = builderForValue.build();
        onChanged();
      } else {
        assigneeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The user this role is assigned to. This field can only be directly set
     * during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User assignee = 4;</code>
     */
    public Builder mergeAssignee(com.google.irm.service.v1alpha2.api.User value) {
      if (assigneeBuilder_ == null) {
        if (assignee_ != null) {
          assignee_ =
              com.google.irm.service.v1alpha2.api.User.newBuilder(assignee_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          assignee_ = value;
        }
        onChanged();
      } else {
        assigneeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The user this role is assigned to. This field can only be directly set
     * during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User assignee = 4;</code>
     */
    public Builder clearAssignee() {
      if (assigneeBuilder_ == null) {
        assignee_ = null;
        onChanged();
      } else {
        assignee_ = null;
        assigneeBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The user this role is assigned to. This field can only be directly set
     * during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User assignee = 4;</code>
     */
    public com.google.irm.service.v1alpha2.api.User.Builder getAssigneeBuilder() {

      onChanged();
      return getAssigneeFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The user this role is assigned to. This field can only be directly set
     * during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User assignee = 4;</code>
     */
    public com.google.irm.service.v1alpha2.api.UserOrBuilder getAssigneeOrBuilder() {
      if (assigneeBuilder_ != null) {
        return assigneeBuilder_.getMessageOrBuilder();
      } else {
        return assignee_ == null
            ? com.google.irm.service.v1alpha2.api.User.getDefaultInstance()
            : assignee_;
      }
    }
    /**
     *
     *
     * <pre>
     * The user this role is assigned to. This field can only be directly set
     * during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User assignee = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.irm.service.v1alpha2.api.User,
            com.google.irm.service.v1alpha2.api.User.Builder,
            com.google.irm.service.v1alpha2.api.UserOrBuilder>
        getAssigneeFieldBuilder() {
      if (assigneeBuilder_ == null) {
        assigneeBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.irm.service.v1alpha2.api.User,
                com.google.irm.service.v1alpha2.api.User.Builder,
                com.google.irm.service.v1alpha2.api.UserOrBuilder>(
                getAssignee(), getParentForChildren(), isClean());
        assignee_ = null;
      }
      return assigneeBuilder_;
    }

    private com.google.irm.service.v1alpha2.api.User proposedAssignee_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.irm.service.v1alpha2.api.User,
            com.google.irm.service.v1alpha2.api.User.Builder,
            com.google.irm.service.v1alpha2.api.UserOrBuilder>
        proposedAssigneeBuilder_;
    /**
     *
     *
     * <pre>
     * The recipient of a requested role handoff. This field can only be directly
     * set during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * `assignee` is always the current role-holder, and `proposed_assignee` is
     * used to track unfinished assignments and handoffs. Let's say Bob assigns
     * Alice to a role. Then the fields are:
     *   `assignee`: nil, `proposed_assignee`: Alice
     * If Alice accepts, then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If she cancels, then the RoleAssignment is deleted.
     * Let's say Alice has the role. Then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If Alice becomes incapacitated and Bob requests Carol to take over, then
     * the fields are:
     *   `assignee`: Alice, `proposed_assignee`: Carol
     * After Carol accepts the handover, the fields are:
     *   `assignee`: Carol, `proposed_assignee`: nil
     * Or if Carol refuses the handover, the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User proposed_assignee = 5;</code>
     *
     * @return Whether the proposedAssignee field is set.
     */
    public boolean hasProposedAssignee() {
      return proposedAssigneeBuilder_ != null || proposedAssignee_ != null;
    }
    /**
     *
     *
     * <pre>
     * The recipient of a requested role handoff. This field can only be directly
     * set during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * `assignee` is always the current role-holder, and `proposed_assignee` is
     * used to track unfinished assignments and handoffs. Let's say Bob assigns
     * Alice to a role. Then the fields are:
     *   `assignee`: nil, `proposed_assignee`: Alice
     * If Alice accepts, then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If she cancels, then the RoleAssignment is deleted.
     * Let's say Alice has the role. Then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If Alice becomes incapacitated and Bob requests Carol to take over, then
     * the fields are:
     *   `assignee`: Alice, `proposed_assignee`: Carol
     * After Carol accepts the handover, the fields are:
     *   `assignee`: Carol, `proposed_assignee`: nil
     * Or if Carol refuses the handover, the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User proposed_assignee = 5;</code>
     *
     * @return The proposedAssignee.
     */
    public com.google.irm.service.v1alpha2.api.User getProposedAssignee() {
      if (proposedAssigneeBuilder_ == null) {
        return proposedAssignee_ == null
            ? com.google.irm.service.v1alpha2.api.User.getDefaultInstance()
            : proposedAssignee_;
      } else {
        return proposedAssigneeBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The recipient of a requested role handoff. This field can only be directly
     * set during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * `assignee` is always the current role-holder, and `proposed_assignee` is
     * used to track unfinished assignments and handoffs. Let's say Bob assigns
     * Alice to a role. Then the fields are:
     *   `assignee`: nil, `proposed_assignee`: Alice
     * If Alice accepts, then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If she cancels, then the RoleAssignment is deleted.
     * Let's say Alice has the role. Then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If Alice becomes incapacitated and Bob requests Carol to take over, then
     * the fields are:
     *   `assignee`: Alice, `proposed_assignee`: Carol
     * After Carol accepts the handover, the fields are:
     *   `assignee`: Carol, `proposed_assignee`: nil
     * Or if Carol refuses the handover, the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User proposed_assignee = 5;</code>
     */
    public Builder setProposedAssignee(com.google.irm.service.v1alpha2.api.User value) {
      if (proposedAssigneeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        proposedAssignee_ = value;
        onChanged();
      } else {
        proposedAssigneeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The recipient of a requested role handoff. This field can only be directly
     * set during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * `assignee` is always the current role-holder, and `proposed_assignee` is
     * used to track unfinished assignments and handoffs. Let's say Bob assigns
     * Alice to a role. Then the fields are:
     *   `assignee`: nil, `proposed_assignee`: Alice
     * If Alice accepts, then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If she cancels, then the RoleAssignment is deleted.
     * Let's say Alice has the role. Then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If Alice becomes incapacitated and Bob requests Carol to take over, then
     * the fields are:
     *   `assignee`: Alice, `proposed_assignee`: Carol
     * After Carol accepts the handover, the fields are:
     *   `assignee`: Carol, `proposed_assignee`: nil
     * Or if Carol refuses the handover, the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User proposed_assignee = 5;</code>
     */
    public Builder setProposedAssignee(
        com.google.irm.service.v1alpha2.api.User.Builder builderForValue) {
      if (proposedAssigneeBuilder_ == null) {
        proposedAssignee_ = builderForValue.build();
        onChanged();
      } else {
        proposedAssigneeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The recipient of a requested role handoff. This field can only be directly
     * set during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * `assignee` is always the current role-holder, and `proposed_assignee` is
     * used to track unfinished assignments and handoffs. Let's say Bob assigns
     * Alice to a role. Then the fields are:
     *   `assignee`: nil, `proposed_assignee`: Alice
     * If Alice accepts, then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If she cancels, then the RoleAssignment is deleted.
     * Let's say Alice has the role. Then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If Alice becomes incapacitated and Bob requests Carol to take over, then
     * the fields are:
     *   `assignee`: Alice, `proposed_assignee`: Carol
     * After Carol accepts the handover, the fields are:
     *   `assignee`: Carol, `proposed_assignee`: nil
     * Or if Carol refuses the handover, the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User proposed_assignee = 5;</code>
     */
    public Builder mergeProposedAssignee(com.google.irm.service.v1alpha2.api.User value) {
      if (proposedAssigneeBuilder_ == null) {
        if (proposedAssignee_ != null) {
          proposedAssignee_ =
              com.google.irm.service.v1alpha2.api.User.newBuilder(proposedAssignee_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          proposedAssignee_ = value;
        }
        onChanged();
      } else {
        proposedAssigneeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The recipient of a requested role handoff. This field can only be directly
     * set during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * `assignee` is always the current role-holder, and `proposed_assignee` is
     * used to track unfinished assignments and handoffs. Let's say Bob assigns
     * Alice to a role. Then the fields are:
     *   `assignee`: nil, `proposed_assignee`: Alice
     * If Alice accepts, then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If she cancels, then the RoleAssignment is deleted.
     * Let's say Alice has the role. Then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If Alice becomes incapacitated and Bob requests Carol to take over, then
     * the fields are:
     *   `assignee`: Alice, `proposed_assignee`: Carol
     * After Carol accepts the handover, the fields are:
     *   `assignee`: Carol, `proposed_assignee`: nil
     * Or if Carol refuses the handover, the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User proposed_assignee = 5;</code>
     */
    public Builder clearProposedAssignee() {
      if (proposedAssigneeBuilder_ == null) {
        proposedAssignee_ = null;
        onChanged();
      } else {
        proposedAssignee_ = null;
        proposedAssigneeBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * The recipient of a requested role handoff. This field can only be directly
     * set during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * `assignee` is always the current role-holder, and `proposed_assignee` is
     * used to track unfinished assignments and handoffs. Let's say Bob assigns
     * Alice to a role. Then the fields are:
     *   `assignee`: nil, `proposed_assignee`: Alice
     * If Alice accepts, then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If she cancels, then the RoleAssignment is deleted.
     * Let's say Alice has the role. Then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If Alice becomes incapacitated and Bob requests Carol to take over, then
     * the fields are:
     *   `assignee`: Alice, `proposed_assignee`: Carol
     * After Carol accepts the handover, the fields are:
     *   `assignee`: Carol, `proposed_assignee`: nil
     * Or if Carol refuses the handover, the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User proposed_assignee = 5;</code>
     */
    public com.google.irm.service.v1alpha2.api.User.Builder getProposedAssigneeBuilder() {

      onChanged();
      return getProposedAssigneeFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The recipient of a requested role handoff. This field can only be directly
     * set during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * `assignee` is always the current role-holder, and `proposed_assignee` is
     * used to track unfinished assignments and handoffs. Let's say Bob assigns
     * Alice to a role. Then the fields are:
     *   `assignee`: nil, `proposed_assignee`: Alice
     * If Alice accepts, then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If she cancels, then the RoleAssignment is deleted.
     * Let's say Alice has the role. Then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If Alice becomes incapacitated and Bob requests Carol to take over, then
     * the fields are:
     *   `assignee`: Alice, `proposed_assignee`: Carol
     * After Carol accepts the handover, the fields are:
     *   `assignee`: Carol, `proposed_assignee`: nil
     * Or if Carol refuses the handover, the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User proposed_assignee = 5;</code>
     */
    public com.google.irm.service.v1alpha2.api.UserOrBuilder getProposedAssigneeOrBuilder() {
      if (proposedAssigneeBuilder_ != null) {
        return proposedAssigneeBuilder_.getMessageOrBuilder();
      } else {
        return proposedAssignee_ == null
            ? com.google.irm.service.v1alpha2.api.User.getDefaultInstance()
            : proposedAssignee_;
      }
    }
    /**
     *
     *
     * <pre>
     * The recipient of a requested role handoff. This field can only be directly
     * set during creation request. Subsequent updates are done via the
     * IncidentRoleHandover methods.
     * `assignee` is always the current role-holder, and `proposed_assignee` is
     * used to track unfinished assignments and handoffs. Let's say Bob assigns
     * Alice to a role. Then the fields are:
     *   `assignee`: nil, `proposed_assignee`: Alice
     * If Alice accepts, then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If she cancels, then the RoleAssignment is deleted.
     * Let's say Alice has the role. Then the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * If Alice becomes incapacitated and Bob requests Carol to take over, then
     * the fields are:
     *   `assignee`: Alice, `proposed_assignee`: Carol
     * After Carol accepts the handover, the fields are:
     *   `assignee`: Carol, `proposed_assignee`: nil
     * Or if Carol refuses the handover, the fields are:
     *   `assignee`: Alice, `proposed_assignee`: nil
     * </pre>
     *
     * <code>.google.cloud.irm.v1alpha2.User proposed_assignee = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.irm.service.v1alpha2.api.User,
            com.google.irm.service.v1alpha2.api.User.Builder,
            com.google.irm.service.v1alpha2.api.UserOrBuilder>
        getProposedAssigneeFieldBuilder() {
      if (proposedAssigneeBuilder_ == null) {
        proposedAssigneeBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.irm.service.v1alpha2.api.User,
                com.google.irm.service.v1alpha2.api.User.Builder,
                com.google.irm.service.v1alpha2.api.UserOrBuilder>(
                getProposedAssignee(), getParentForChildren(), isClean());
        proposedAssignee_ = null;
      }
      return proposedAssigneeBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.irm.v1alpha2.IncidentRoleAssignment)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.irm.v1alpha2.IncidentRoleAssignment)
  private static final com.google.irm.service.v1alpha2.api.IncidentRoleAssignment DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.irm.service.v1alpha2.api.IncidentRoleAssignment();
  }

  public static com.google.irm.service.v1alpha2.api.IncidentRoleAssignment getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<IncidentRoleAssignment> PARSER =
      new com.google.protobuf.AbstractParser<IncidentRoleAssignment>() {
        @java.lang.Override
        public IncidentRoleAssignment parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new IncidentRoleAssignment(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<IncidentRoleAssignment> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<IncidentRoleAssignment> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.irm.service.v1alpha2.api.IncidentRoleAssignment getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
